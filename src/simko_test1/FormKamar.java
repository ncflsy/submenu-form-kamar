/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package simko_test1;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.awt.*;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import javax.swing.table.*;
/**
 *
 * @author nikof
 */
public class FormKamar extends javax.swing.JFrame {

    /**
     * Creates new form Form_Kamar
     */
    public boolean databaru;
    public boolean klikedit;
    private final Koneksi koneksi = new Koneksi();
  
      
    public FormKamar() {
        initComponents();
        getData();
        databaru = true;
        klikedit = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cb_filter = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_cari = new javax.swing.JTextField();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "no", "fasilitas", "lantai", "ukuran", "harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(410, 300, 1460, 720);

        cb_filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no kamar", "lantai", "ukuran", "harga" }));
        cb_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_filterActionPerformed(evt);
            }
        });
        getContentPane().add(cb_filter);
        cb_filter.setBounds(1230, 210, 110, 29);

        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6);
        jLabel6.setBounds(410, 210, 190, 60);

        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7);
        jLabel7.setBounds(620, 210, 190, 60);

        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8);
        jLabel8.setBounds(830, 210, 200, 60);

        tf_cari.setBackground(new Color(0,0,0,0));
        tf_cari.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 28)); // NOI18N
        tf_cari.setForeground(new Color(6, 40, 61));
        tf_cari.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_cari.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tf_cariInputMethodTextChanged(evt);
            }
        });
        tf_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_cariActionPerformed(evt);
            }
        });
        tf_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_cariKeyReleased(evt);
            }
        });
        getContentPane().add(tf_cari);
        tf_cari.setBounds(1450, 210, 340, 30);

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Kamar Kost.png"))); // NOI18N
        bg.setText("jLabel1");
        getContentPane().add(bg);
        bg.setBounds(10, 0, 1973, 1080);

        setSize(new java.awt.Dimension(1938, 1089));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        klikedit = true;
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        new Input_Kamar().setVisible(true);
        databaru = true;
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // kondisi untuk menu edit
      
        if(klikedit = true){
            editData2();
        } else {
            JOptionPane.showMessageDialog(null, "Pilih opsi data yang ingin diedit");
        }
       databaru = false;
       
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        
        try{
            int row = jTable1.getSelectedRow();
            String no_kamar = jTable1.getModel().getValueAt (row, 0).toString();
            String resultSet = "DELETE FROM tb_kamar WHERE noKamar='"+ no_kamar +"'";
            Connection conn = koneksi.getKoneksi();
            PreparedStatement pst = conn.prepareStatement(resultSet);
            
            pst.execute();
            JOptionPane.showMessageDialog(null, "Berhasil dihapus");
            getData();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Gagal dihapus");
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    private void tf_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cariActionPerformed

    private void tf_cariInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tf_cariInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cariInputMethodTextChanged

    private void tf_cariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cariKeyReleased
        // TODO add your handling code here:
       try{
            databaru = false;
            
            
            String no_kamar = tf_cari.getText();
            
            Connection conn = koneksi.getKoneksi();
            Statement stm = conn.createStatement();
            ResultSet result = stm.executeQuery("SELECT * FROM tb_kamar WHERE noKamar='" + no_kamar+"'");
            
            DefaultTableModel tbl = new DefaultTableModel();
            tbl.addColumn("noKamar");
            tbl.addColumn("fasilitas");
            tbl.addColumn("lantai");
            tbl.addColumn("ukuran");
            tbl.addColumn("harga");
            jTable1.setModel(tbl);
            
            
            if (result.next()){
                tbl.addRow(new Object[]{
                    result.getString("noKamar"),
                    result.getString("fasilitas"),
                    result.getString("lantai"),
                    result.getString("ukuran"),
                    result.getString("harga")
                });
              jTable1.setModel(tbl);
            }else {
                getData();
            }
            
             
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKamar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tf_cariKeyReleased

    private void cb_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_filterActionPerformed
        // TODO add your handling code here:
        try{
            databaru = false;
            
            
            int filter = cb_filter.getSelectedIndex();
            System.out.println(filter);
            Connection conn = koneksi.getKoneksi();
            Statement stm = conn.createStatement();
            String msql;
            if (filter == 0) {
                msql = "SELECT * FROM tb_kamar GROUP BY noKamar ORDER BY noKamar ASC";
            }
            else if (filter == 1){
                msql = "SELECT * FROM tb_kamar GROUP BY noKamar ORDER BY lantai ASC";
            }
            else if (filter == 2){
                msql = "SELECT * FROM tb_kamar GROUP BY noKamar ORDER BY ukuran ASC";
            }
            else{
                msql = "SELECT * FROM tb_kamar GROUP BY noKamar ORDER BY harga ASC";
            }
            System.out.println(msql);
            ResultSet result = stm.executeQuery(msql);
            DefaultTableModel tbl = new DefaultTableModel();
            tbl.addColumn("noKamar");
            tbl.addColumn("fasilitas");
            tbl.addColumn("lantai");
            tbl.addColumn("ukuran");
            tbl.addColumn("harga");
            jTable1.setModel(tbl);
            
            
            while (result.next()){
                tbl.addRow(new Object[]{
                    result.getString("noKamar"),
                    result.getString("fasilitas"),
                    result.getString("lantai"),
                    result.getString("ukuran"),
                    result.getString("harga")
                });
              jTable1.setModel(tbl);
            }
            
             
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKamar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cb_filterActionPerformed

    public void editData(){
        
        Input_Kamar IK = new Input_Kamar();
        
        int i =jTable1.getSelectedRow();
        TableModel tbl = jTable1.getModel();
             
        String no = tbl.getValueAt(i, 0).toString();
        String fasilitas = tbl.getValueAt(i, 1).toString();
        String lantai = tbl.getValueAt(i, 2).toString();
        String ukuran = tbl.getValueAt(i, 3).toString();
        String harga = tbl.getValueAt(i, 4).toString();

        IK.tf_nokamar.setText(no);
        IK.tf_fasilitas.setText(fasilitas);
        IK.tf_lantai.setText(lantai);
        IK.tf_ukuran.setText(ukuran);
        IK.tf_harga.setText(harga);
        
        IK.setVisible(true);
       
        /*
        try{
            databaru = false;
            
            int row = jTable1.getSelectedRow();
            String no_kamar = jTable1.getModel().getValueAt (row, 0).toString();
            
            Connection conn = koneksi.getKoneksi();
            Statement stm = conn.createStatement();
            ResultSet result = stm.executeQuery("SELECT * FROM tb_kamar WHERE noKamar='" + no_kamar+"'");
            
             
            if (result.next()){
                
                jTextField1.setText(result.getString("noKamar"));
                jTextField2.setText(result.getString("fasilitas"));
                jTextField3.setText(result.getString("lantai"));
                jTextField4.setText(result.getString("ukuran"));
                jTextField5.setText(result.getString("harga"));
                
                
            }
            
             
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKamar.class.getName()).log(Level.SEVERE, null, ex);
        }
        new Input_Kamar().setVisible(true);
        */
    }
    public void editData2(){
        
        Input_Kamar2 IK2 = new Input_Kamar2();
        
        int i =jTable1.getSelectedRow();
        TableModel tbl = jTable1.getModel();
             
        String no = tbl.getValueAt(i, 0).toString();
        String fasilitas = tbl.getValueAt(i, 1).toString();
        String lantai = tbl.getValueAt(i, 2).toString();
        String ukuran = tbl.getValueAt(i, 3).toString();
        String harga = tbl.getValueAt(i, 4).toString();

        IK2.tf_nokamar.setText(no);
        IK2.tf_fasilitas.setText(fasilitas);
        IK2.tf_lantai.setText(lantai);
        IK2.tf_ukuran.setText(ukuran);
        IK2.tf_harga.setText(harga);
        
        IK2.setVisible(true);
       
    }
    
    /*
    
   // edit data normalll
    public void editData(){
        try{
            databaru = false;
            
            int row = jTable1.getSelectedRow();
            String no_kamar = jTable1.getModel().getValueAt (row, 0).toString();
            
            Connection conn = koneksi.getKoneksi();
            Statement stm = conn.createStatement();
            ResultSet result = stm.executeQuery("SELECT * FROM tb_kamar WHERE noKamar='" + no_kamar+"'");
            
            
            if (result.next()){
                jTextField1.setText(result.getString("noKamar"));
                jTextField2.setText(result.getString("fasilitas"));
                jTextField3.setText(result.getString("lantai"));
                jTextField4.setText(result.getString("ukuran"));
                jTextField5.setText(result.getString("harga"));
                
            }
            
             
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKamar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     */
    private void getData(){
        try{
            Connection conn = koneksi.getKoneksi();
            Statement stm = conn.createStatement();
            ResultSet result = stm.executeQuery("select * from tb_kamar");
            
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //reset
            model.setRowCount(0);
            while(result.next()) {
               String no_kamar = result.getString("noKamar");
               String fasilitas = result.getString("fasilitas");
               String lantai = result.getString("lantai");
               String ukuran = result.getString("ukuran");
               String harga = result.getString("harga");
               
               model.addRow(new Object[]{
                   no_kamar, 
                   fasilitas, 
                   lantai, 
                   ukuran, 
                   harga
               });
               
            }
             
            
        } catch (SQLException ex) {
            Logger.getLogger(FormKamar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKamar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKamar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JComboBox<String> cb_filter;
    private javax.swing.JLabel jLabel6;
    public static final javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField tf_cari;
    // End of variables declaration//GEN-END:variables
}
